# ---------------------------------------------------------------------------- #
#                             Create Virtual env :                             #
# ---------------------------------------------------------------------------- #

- create virtual environment ( in proj root)  - virtualenv .env
- to go inside venv -   .env/scripts/activate
```
virtualenv .env ;.env/scripts/activate
```

while inside virtualenv, install all dependencies, with help of requirements.txt file : 
```
pip install -r requirements.txt
```

move out of virtual env : 
```
deactivate
```

---
local testing

- try running this one by one to know everything is working perfect
```
python manage.py makemigrations 
python manage.py migrate 
python manage.py runserver
```


---
add basic auth : 

- python manage.py createsuperuser
- enter userName , & pass , ( remember it )

---
# ---------------------------------------------------------------------------- #
#                  Do if needed ( keep auth_app separated ) :                  #
# ---------------------------------------------------------------------------- #
---
Create a new app : 

- change appName here
```
python manage.py  startapp  appNameHere
```


---
Connect newly made app, to our project : 
- in vsc > proj >myproject> urls.py > urlpatterns : 
urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include('appName.urls')),  #our appName is core
]

---
Register our app : 
in vsc > proj >myproject> settings.py > installed_apps list : 
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # dependencies here  
    'rest_framework',   
    'django_filters',
    'corheaders',
```
    #! register apps here (change appName and configName)
    'core.apps.CoreConfig',
    'appName.apps.AppNameConfig',
```
]

---
# ---------------------------------------------------------------------------- #
#                                 final steps :                                #
# ---------------------------------------------------------------------------- #
- add required code, in views.py, models.py etc
- test locally, after adding new app : try running this one by one to know everything is working perfect
```
python manage.py makemigrations 
python manage.py migrate 
python manage.py runserver
```
- NOTE : Things already included =  basic auth, filter, auth_app, corsheader, SMTP setup ( heroku not added ) 


---
# ---------------------------------------------------------------------------- #
#              HEROKU setup ( in settings.py of myproject folder )             #
# ---------------------------------------------------------------------------- #
---

```

#*1. first install this in .env =  pip install psycopg2 gunicorn django-heroku whitenoise
#*2. do this steps in .env =   pip freeze > requirements.txt
#*3. Create an app on Heroku (new> location = US > Hit create)
#*4. Heroku site> current proj > resources > add-ons > heroku postgres > free plan > submit order

#*5. Heroku site> current proj> res > postgres > view credentials, paste creds in below snippet 
# DATABASES = { 
#     'default': { 
#         'ENGINE': 'django.db.backends.postgresql_psycopg2', # keep this same
#         'NAME': '',  # this means Database key
#         'USER': '',
#         'PASSWORD' : '',
#         'HOST' : '',
#         'PORT' : '',
#     } 
# }


#*6. Comment the local DB below ( after adding above snippet)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

#*7. Uncomment below lines
# import django_heroku 
# import os
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
# STATIC_URL = "/static/"
# django_heroku.settings(locals())

#*8. comment below line, after uncommenting above step 
STATIC_URL = 'static/'
#*9. Create empty git repo, and add this whole code folder to it
#*10. Paste this command in terminal, to upload to heroku
# heroku login ( a browser will open => hit log in ) ( then return back to terminal )
# heroku git:remote -a   ourCustomAppNameHERE
# git push heroku master
```




